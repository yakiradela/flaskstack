name: CI/CD for Flaskstack

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  bootstrap:
    name: Terraform Bootstrap (S3 + DynamoDB)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: flaskstack/infra/boostrap
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  infra:
    name: Terraform Infrastructure (VPC + EKS)
    runs-on: ubuntu-latest
    needs: bootstrap
    defaults:
      run:
        working-directory: flaskstack/infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_WARN_OUTPUT_ERRORS: "0"

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: docker build -t yakiradela/flaskstack:latest ./flaskstack/Docker

      - name: Push Docker Image
        run: docker push yakiradela/flaskstack:latest

  deploy:
    name: Helm Deploy to EKS
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up kubectl
        uses: aws/setup-kubectl@v3

      - name: Set up Helm
        uses: aws/setup-helm@v3

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name eks-cluster

      - name: Helm Upgrade/Install
        run: |
          helm upgrade --install flaskstack ./flaskstack/helm-chart \
            --namespace default \
            --set global.image.repository=yakiradela/flaskstack \
            --set environments.dev.image.tag=latest \
            --set environment=dev \
            --wait
